import Head from "next/head";
import { useRouter } from "next/router";
import { useState, useEffect, useMemo } from "react";
import Products from "../components/Products/Products";
import Filter from "../components/Filter/Filter";
import styles from "../styles/Home.module.css";
import filter from "../helpers/filters.js";
import pagination from "../helpers/pagination.js";
import queryString from "../helpers/queryString";

export async function getServerSideProps() {
  // Fetch data from external API
  const res = await fetch(`http://localhost:3000/api/products`);
  const data = await res.json();
  // Pass data to the page via props
  return { props: { data } };
}

export default function Home(props) {
  const router = useRouter();
  const baseProducts = props.data.result.products;
  const [productItems, setProductItems] = useState(baseProducts);
  const [page, setPage] = useState(1);
  const perPage = 10;

  const shownItem = useMemo(
    () => pagination(productItems, { page, perPage }),
    [page, productItems]
  );

  const [filterState, setFilterState] = useState({
    sort: "bestsell",
    category: "all",
  });

  useEffect(() => {
    filterHandler(router.query);

    const onRouteChange = (url) => {
      const href = window.location.href.split("/");
      const urlString = href[href.length - 1].replace("?", "");
      filterHandler(queryString(urlString));
      setFilterState({
        sort: "bestsell",
        category: "all",
        ...queryString(urlString),
      });
      console.log({
        sort: "bestsell",
        category: "all",
        ...queryString(urlString),
      });
    };

    const scrollToEnd = () => {
      if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {
        setPage(page + 1);
      }
    };

    if (typeof window !== "undefined") {
      window.addEventListener("popstate", onRouteChange, false);
      window.addEventListener("scroll", scrollToEnd, { passive: true });
    }
    return () => {
      if (typeof window !== "undefined") {
        window.removeEventListener("popstate", onRouteChange, false);
        window.removeEventListener("scroll", scrollToEnd);
      }
    };
  }, []);

  const filterHandler = (val) => {
    setFilterState(val);
    setProductItems(filter(baseProducts, val));
    router.push({ query: val }, undefined, { shallow: true });
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Search Product</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.pageHeadLine}>
        <h1>استیکر فیلم-سریال-انیمیشن</h1>
      </div>
      <Filter onChange={filterHandler} value={filterState} />
      <Products products={shownItem} />
    </div>
  );
}
